---
title: "facetごとに大きさを変更する"
subtitle: ""
description: ""
author: ""
date: "2024-02-16"
categories: [facet, gtable, ggh4x, ggplot2, R]
---

# 動機
facetごとにfacetの大きさを自動で（あるいはマニュアルで）変えたい。

# Load packages
```{r}
library(magrittr)
library(ggplot2)
```

# 縦方向に並べたfacetの大きさをスケール依存的に変える
```{r}
#| fig-width: 12
#| fig-height: 3
tbl_plot <-
  paste("facet", 1:3) %>%
  purrr::imap(~ {
    tibble::tibble(
      facet = .x,
      x = seq_len(.y * 5),
      y = seq_len(.y * 5)
    )
  }) %>%
  dplyr::bind_rows()

gp <-
  tbl_plot %>%
  ggplot(aes(x, y)) +
  geom_point() +
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "grey90")
  )

# そのまま出力
gp_default <- gp + facet_grid(rows = vars(facet))

# 縦軸をfacetごとに自由に
gp_free_scale <- gp + facet_grid(rows = vars(facet), scales = "free_y")

# 大きさをfacetごとに自由に
gp_free_space <- gp + facet_grid(rows = vars(facet), scales = "free_y", space = "free_y")

# spaceだけfreeを指定しても意味はない
gp_only_space <- gp + facet_grid(rows = vars(facet), space = "free")

# 比較
patchwork::wrap_plots(
  gp_default + labs(title = "default"),
  gp_free_scale + labs(title = "free scale"),
  gp_free_space + labs(title = "free scale & free space"),
  gp_only_space + labs(title = "only free space"),
  nrow = 1)
```

# 横方向に並べたfacetの大きさをスケール依存的に変える

```{r}
#| fig-height: 3
# 横軸でもfacetの並びを変えればできる
gp + facet_grid(cols = vars(facet), scales = "free_x", space = "free_x")
```

# 二次元に並べたfacetで範囲ごとに大きさを変える
`space`引数があるのは、`ggplot2::facet_grid()`だけで、`ggplot2::facet_wrap()`にはない。
なので、`facet_wrap()`を使って自動でいい感じにfacetの大きさを変更することはできない。

## `facet_grid()`
`facet_grid()`でやりたい場合は、以下のようにするとできるがfacetのラベルをつけることはできない。

```{r}
# データの準備
tbl_plot <-
  paste("facet", 1:9) %>%
  purrr::imap(~ {
    tibble::tibble(
      facet = .x,
      x = seq_len(.y * 5),
      y = seq_len(.y * 5)
    )
  }) %>%
  dplyr::bind_rows()

plot_point <- function(tbl) {
  ggplot(tbl, aes(x, y)) +
    geom_point() +
    theme_minimal() +
    theme(
      panel.grid = element_blank(),
      panel.background = element_rect(fill = "grey90"),
      axis.ticks = element_line()
    )
}
```

```{r}
#| fig-width: 4
#| fig-height: 4
gp_grid <-
  tbl_plot %>%
  dplyr::with_groups(facet, tidyr::nest) %>%
  dplyr::mutate(
    facet_row = rep(1:3, each = 3),
    facet_col = rep(1:3, 3)
  ) %>%
  tidyr::unnest(data) %>%
  plot_point() +
  geom_label(
    data = \(df) dplyr::mutate(df, x = mean(x), y = mean(y), .by = facet),
    aes(label = facet)) +
  facet_grid(rows = vars(facet_row), cols = vars(facet_col), scales = "free", space = "free")
gp_grid
```

## `ggh4x::facet_manual(), scale_*_facet()`
facetラベルを付けつつ似たようなことをやるには、`ggh4x::facet_manual()`と`ggh4x::scale_[xy]_facet()`で、
かなり強引に手動で設定することができる。
ただし、この場合は全てのfacetに軸ラベルがついてしまう。

```{r}
#| fig-width: 4
#| fig-height: 4
gp_manual <-
  tbl_plot %>%
  plot_point() +
  # `ggh4x::facet_manual()`でfacetの大きさを変更（各facetのscaleは制御できない）
  ggh4x::facet_manual(~ facet, design = matrix(1:9, 3, 3, byrow = TRUE),
                      widths = 7:9, heights =  c(3,6,9), scales = "free") +
  # `ggh4x::scale_[xy]_facet()`で各facetのscaleを設定
  ggh4x::scale_x_facet(facet %in% paste("facet", c(1,4,7)), limits = c(0, 35)) +
  ggh4x::scale_x_facet(facet %in% paste("facet", c(2,5,8)), limits = c(0, 40)) +
  ggh4x::scale_x_facet(facet %in% paste("facet", c(3,6,9)), limits = c(0, 45)) +
  ggh4x::scale_y_facet(facet %in% paste("facet", 1:3), limits = c(0, 15)) +
  ggh4x::scale_y_facet(facet %in% paste("facet", 4:6), limits = c(0, 30)) +
  ggh4x::scale_y_facet(facet %in% paste("facet", 7:9), limits = c(0, 45))
gp_manual
```

## `ggh4x::facet_manual(), scale_*_facet()` + `gtable`
`gtable`パッケージを使えば、不要な軸ラベルを除くことも一応できる。

```{r}
#| fig-width: 4
#| fig-height: 4
gt <- ggplotGrob(gp_manual)

gt_filtered <-
  gtable::gtable_filter(gt, pattern = "axis-([tr]|(b-[123456])|(l-[235689]))",
                        trim = TRUE, invert = TRUE)

# gtable::gtable_show_layout(gt_filtered)
gt_filtered$widths[c(8, 12)] <- unit(0, "mm")
gt_filtered$heights[c(9, 14)] <- unit(0, "mm")
grid::grid.newpage(); grid::grid.draw(gt_filtered)
```

## 比較
```{r}
#| fig-width: 18
#| fig-height: 6
patchwork::wrap_plots(gp_grid, gp_manual, gt_filtered, ncol = 3)
```

# Session info
```{r}
sessionInfo()
```
